ROW				RN	0
COL				RN	1
MAZE			RN	2
CNT				RN	3
CCELL			RN	4
OFFSET			RN	5
OFFSET2			RN	6
TMP				RN	7
FLAG			RN	8
PL				RN	10
				AREA MY_CODE,CODE,READONLY
mazeSolver		PROC
				EXPORT mazeSolver
				PUSH{R4-R8,R10,LR}
				LDR PL,=0
				
WHILE			LDR FLAG,=0
				ADD	PL,#1
				MUL CNT, ROW, COL
				LDR OFFSET,=0
				
FOR
				LDRB CCELL,[MAZE,OFFSET]
				CMP CCELL,#' '
				BNE NEXT
				
IF1
				SUB OFFSET2,OFFSET,COL
				LDRB CCELL,[MAZE,OFFSET2]
				CMP  CCELL,#97
				BLO  ELSEIF1
				CMP  CCELL,#122
				BHI  ELSEIF1
				LDR  TMP,='N'
				STRB TMP,[MAZE,OFFSET]
				B NEXT
				
				
ELSEIF1
				ADD OFFSET2,OFFSET,#1
				LDRB CCELL,[MAZE,OFFSET2]
				CMP  CCELL,#97
				BLO  ELSEIF2
				CMP  CCELL,#122
				BHI  ELSEIF2
				LDR  TMP,='E'
				STRB TMP,[MAZE,OFFSET]
				B NEXT
ELSEIF2
				ADD OFFSET2,OFFSET,COL
				LDRB CCELL,[MAZE,OFFSET2]
				CMP  CCELL,#97
				BLO  ELSEIF3
				CMP  CCELL,#122
				BHI  ELSEIF3
				LDR  TMP,='S'
				STRB TMP,[MAZE,OFFSET]
				B NEXT
ELSEIF3
				SUB OFFSET2,OFFSET,#1
				LDRB CCELL,[MAZE,OFFSET2]
				CMP  CCELL,#97
				BLO  NEXT
				CMP  CCELL,#122
				BHI  NEXT
				LDR  TMP,='W'
				STRB TMP,[MAZE,OFFSET]
				
NEXT			ADD OFFSET,#1
				SUB CNT,#1
				CMP CNT,#0
				BNE FOR
				
				
				MUL CNT, ROW, COL
				LDR OFFSET,=0
				
FOR1
				LDRB CCELL,[MAZE,OFFSET]
				CMP  CCELL,#65
				BLO  NEXT1
				CMP  CCELL,#90
				BHI  NEXT1
				ADD CCELL,#32
				STRB CCELL,[MAZE,OFFSET]
				LDR FLAG,=1
				

NEXT1			ADD OFFSET,#1
				SUB CNT,#1
				CMP CNT,#0
				BNE FOR1
				CMP FLAG,#1
				BEQ WHILE
				SUB PL,#1
				MOV R0,PL
				POP {R4-R8,R10,PC}
				ENDP
				END